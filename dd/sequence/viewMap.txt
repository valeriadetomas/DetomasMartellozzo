actor User
participant WebApplication
participant FWebServer
participant PMWebServer
participant ViewInfoManager
participant Model
participant MapsManager
participant MapsServer
participant DataManager
participant DatabaseServer

alt farmer
activate User

User->WebApplication: click( mapButton )
activate WebApplication
WebApplication->FWebServer:getMap()
activate FWebServer
FWebServer->ViewInfoManager:getMap( incomplete )
activate ViewInfoManager
ViewInfoManager->Model:getMap( incomplete )
activate Model

Model->MapsManager:getMap()
activate MapsManager
MapsManager->MapsServer:getMap()
activate MapsServer
MapsServer-->MapsManager: map
deactivate MapsServer
MapsManager-->Model:map
deactivate MapsManager

Model->DataManager:getAllPositions()
activate DataManager
DataManager->DatabaseServer:getAllPositions()
activate DatabaseServer
DatabaseServer-->DataManager:Set<position, farm(name, typeOdProd)>
deactivate DatabaseServer
DataManager-->Model:Set<position, farm(name, typeOdProd)>
deactivate DataManager
Model-->ViewInfoManager:simpleMap
deactivate Model

ViewInfoManager-->FWebServer:simpleMap
deactivate ViewInfoManager
FWebServer-->WebApplication:simpleMap
deactivate FWebServer
WebApplication-->User:simpleMap
deactivate WebApplication
User->WebApplication:selectFarm(position)
activate WebApplication
WebApplication->FWebServer:selectFarm(position)
activate FWebServer
FWebServer-->WebApplication:farmName, List<typeOfProduction>
deactivate FWebServer
WebApplication-->User:farmName, List<typeOfProduction>
deactivate WebApplication
deactivate User

else policy maker
activate User

User->WebApplication: click( mapButton )
activate WebApplication
WebApplication->PMWebServer:getMap()
activate PMWebServer
PMWebServer->ViewInfoManager:getMap( complete )
activate ViewInfoManager
ViewInfoManager->Model:getMap( complete )
activate Model

Model->MapsManager:getMap()
activate MapsManager
MapsManager->MapsServer:getMap()
activate MapsServer
MapsServer-->MapsManager: map
deactivate MapsServer
MapsManager-->Model:map
deactivate MapsManager

Model->DataManager:getAllPositions()
activate DataManager
DataManager->DatabaseServer:getAllPositions()
activate DatabaseServer
DatabaseServer-->DataManager:Set<position, farm(name,typeOdProd,quantity,evaluation)>
deactivate DatabaseServer
DataManager-->Model:Set<position, farm(name, typeOdProd,quantity,evaluation)>
deactivate DataManager
Model-->ViewInfoManager:completeMap
deactivate Model

ViewInfoManager-->PMWebServer:completeMap
deactivate ViewInfoManager
PMWebServer-->WebApplication:completeMap
deactivate PMWebServer
WebApplication-->User:completeMap
deactivate WebApplication
User->WebApplication:selectFarm(position)
activate WebApplication
WebApplication->PMWebServer:selectFarm(position)
activate PMWebServer
PMWebServer-->WebApplication:farmName, Set<typeOfProduction,quantity>, evaluation
deactivate PMWebServer
WebApplication-->User:farmName, Set<typeOfProduction,quantity>, evaluation
deactivate WebApplication
deactivate User
end



